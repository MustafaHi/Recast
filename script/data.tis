const dbPath = System.home("Recast.json");

function initFiles(forced = false) {
    if (!System.scanFiles(dbPath) || forced) {
        var file = Stream.openFile(dbPath, "wu");
        // o = options
        // l = playlists     { id,name }
        // s = subscriptions { name,author,feed,update,image100,image600 } // imageXX represent size, update is last check Date().toISOString()
        // p = podcasts      { name,author,audio,list,down,time }
        var data = {
            o: {
                performance: false,
                animation: true,
                trayPlayer: false,
                notification: true,
                autoDownload: false,
                downloadDir: System.home(),
                proxy: "",
                theme: "default",
                size: [500, 500],
                position: [self.toPixels(905dip, #width), self.toPixels(735dip, #height)]
            },
            l: [{
                id: "queue",
                name: "Queue"
            }],
            s: [],
            p: []
        }
        file.print(JSON.stringify(data," "));
        file.close();
    }
}
initFiles();

namespace DB {
    var data;
    function load() {
        var file = Stream.openFile(dbPath, "ur");
        data = parseData(file);
        file.close();
        if(!data) { initFiles(true); load(); }
        
        apply();
        getPodcasts();
        playlists();
        subscriptions();
        podcasts(data.p.filter(p => p.list == "queue"), "queue");
        downloads();
        $(#setting).value = data.o;
    }
    function apply() {
        Performance = data.o.performance;
        view.animationsEnabled = data.o.animation;
        self.@#theme = data.o.theme;
        // getPodcasts();
        save();
    }
    function save() {
        var file = Stream.openFile(dbPath, "wu");
        file.print(JSON.stringify(data, " "));
        file.close();
    }

    function playlists() {
        var selected = $(#lists>li:current)?.id;
        $(#mPlaylists).clear();
        $(#lists).clear();
        for (var l in data.l) {
            var el = <li id={l.id}>{l.name}</li>;
            $(#mPlaylists).append(el);
            $(#lists).append(el);
        }
        selected ? $(#lists>#{selected}).sendEvent("click") : $(#lists>li).sendEvent("click");
    }
    function addPlaylist() {
        var list = {
            id: "L" + rand(90000),
            name: $(#iPlaylistName).text
        };
        data.l.push(list);
        save();
        playlists();
    }
    function deletePlaylist(ID) {
        var (i, l) = data.l.find(l => l.id == ID);
            data.l.remove(i);
        save();
    }

    function subscriptions() {
        var s_s = $(#subscriptions);
            s_s.clear();
        if (Performance) {
            for (var p in data.s)
                s_s.$append(<podcast feed="{p.feed}"><img src="{p.image100}"/><n>{p.name}</n><a>{p.author}</a></podcast>);
        } else {
            for (var p in data.s)
                s_s.$append(<podcast feed="{p.feed}"><img src="{p.image600}"/><n>{p.name}</n><a>{p.author}</a></podcast>);
        }
    }
    function subscribe(podcast) {
        data.s.push(podcast);
        save();
    }
    function unsubscribe(podcast) {
        var (i, p) = data.s.find(p => p.feed == podcast);
            data.s.remove(i);
        save();
    }
    
    function podcasts(list = {}, type) {
        if (type == "playlist") {
            $(#playlists>list).clear();
            for (var p in list)
                $(#playlists>list).$append(<item audio="{p.audio}" time="{p.time}"><block><div><n>{p.name}</n><a>{p.author}</a></div><div><button .bPlay>PLAY</button><button .delete><icon.x/></button></div></block></item>);
        } else if (type == "queue") {
            Queue.clear();
            if (list.length == 0) { return true; }
            for (var p in list)
                Queue.$prepend(<item audio="{p.audio}" time="{p.time}"><n>{p.name}</n><a>{p.author}</a></item>);
            Queue.$$(item).last.state.current = true;
            Queue.@#list = list[0].list;
        }
    }
    function addPodcast(podcast, list) {
        var (i, p) = data.p.find(p => p.audio == podcast.audio);
        if (i >= 0) {

            if (list) { 
                data.p[i].list = podcast.list;
                data.p[i].time = podcast.time;
            } else { data.p[i].down = podcast.down; }

        } else { data.p.push(podcast); }
        
        if (Queue.@#list == podcast.list) { addToQueue(podcast); }
        save();
    }
    function updateTime(audioUrl, time) {
        var (i, p) = data.p.find(p => p.audio == audioUrl);
            data.p[i].time = time;
        save();
    }
    function addToQueue(p) { // p for podcast
        Queue.$prepend(<item audio="{p.audio}" time="{p.time}"><n>{p.name}</n><a>{p.author}</a></item>);
    }

    function downloads() {
        var d = $(#downloads>list);
            d.clear();
        for (var p in data.p.filter(p => p.down == true))
            d.$append(<item audio="{p.audio}" time="{p.time}"><block><div><n>{p.name}</n><a>{p.author}</a></div><div><button .bPlay>PLAY</button><button .delete><icon.x/></button></div></block></item>);
    }
}


event change $(#setting) {
    DB.data.o = this.value;
    DB.apply();
}
event click $(#changeDir) {
    var fn = view.selectFolder("Select Download folder" , System.home());
    if (fn) {
        DB.data.o.downloadDir = fn;
        DB.save();
        $(#setting).value = DB.data.o;
    }
}

