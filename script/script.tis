// Recast v0.9
// https://github.com/MustafaHi/Recast

event click $(navigator>li) {
    $(browser).@#show = this.id;
    if (this.state.current) {return true;}
    
    if (var c = $(navigator>li:current)) { c.state.current = false; }
    if (var e = $(browser>section:expanded)) { e.state.expanded = false; }
    this.state.current = true;
    $(browser>#{this.@#for}).state.expanded = true;
}
event keyup $(#iSearch)(e) {
    if (e.keyCode == Event.VK_ENTER) {
        getPodcasts(this.value);
    }
}

event click $(playlist>header) { $(browser).@#show = "shows"; }

var prevLink;
event click $(podcast) {
    var link = this.@#feed;
    if (prevLink == link) {
        $(browser).@#show = "playlist";
        return true;
    }
    prevLink = link;
    $(browser).@#show   = "playlist";
    Playlist.state.busy = true;
    Playlist.@#failed   = undefined;
    Playlist.@#feed     = link;
    getPodcast(link);
}

event click $(.bSubscribe) {
    if (this.state.current) { // unsubscribe
        DB.unsubscribe(playlist.@#feed);
        this.state.current = false;
    } else { // subscribe
        var p = Podcasts.results.find(p => p.feedUrl == playlist.@#feed);
        var podcast = {
            feed: p.feedUrl,
            name: p.collectionName,
            author: p.artistName,
            update: new Date().toISOString(),
            image100: p.artworkUrl100,
            image600: p.artworkUrl600
        };
        DB.subscribe(podcast);
        this.state.current = true;
    }
    DB.subscriptions();
}

event click $(.bPlay) {
    // play(this.$o(episode).@#audio);
    var p = this.$o(episode) || this.$o(item);
    if (p.tag == "episode") {
        Queue.@#list = "";
        Queue.$content(<item audio="{p.@#audio}" time="0"><n>{p.$(name).text}</n><a>{$(author>name).text}</a></item>);
        $(queue>item).state.current = true;
    } else if (p.tag == "item") {
        var list = DB.data.p.filter(p => p.list == $(#lists>li:current).id);
        DB.podcasts(list, "queue");
        $(queue>item[audio="{p.@#audio}"]).postEvent("click");
    }
    play();
}

event click $(.bPlaylist) { this.popup($(#mPlaylists), 5); }

event click $(episode a) { Sciter.launch(this.@#href); }

