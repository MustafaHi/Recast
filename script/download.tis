
event click $(.bDownload) {
    var episode = this.$o(episode);
    var podcast = {
        name  : episode.$(name).text,
        author: $(author>name).text,
        audio : episode.@#audio,
        list  : "",
        down  : true,
        time  : 0
    };
    DB.addPodcast(podcast, false);
    $(#downloads>list).$append(<item audio="{podcast.audio}" time="{podcast.time}"><block><div><n>{podcast.name}</n><a>{podcast.author}</a></div><div><button .bPlay>PLAY</button><button .delete><icon.x/></button></div></block></item>);
    download(podcast);
    this.remove();
}

async function download(podcast) {
    var el = $(#downloads item[audio='{podcast.audio}'] .bPlay);
    el.@#download = true;
    var path = URL.toPath(DB.data.o.downloadDir + "/" + podcast.name + "." + URL.parse(podcast.audio).ext);
    function progress(loaded, total) {
        el = $(#downloads item[audio='{podcast.audio}'] .bPlay);
        el.text = String.printf("%02d%%",((loaded || 1)/(total || 1).toFloat())*100);
    }
    function success(md5) {
        if (md5) {
            el = $(#downloads item[audio='{podcast.audio}'] .bPlay);
            el.@#download = undefined;
            el.text = "PLAY";
            el.$o(item).@#audio = path;
            var (i, p) = DB.data.p.find(p => p.audio == podcast.audio);
            DB.data.p[i].audio = path;
            DB.save();
        } else { el.text = "ERROR"; debug DOWNLOAD: "Error"; }
    }
    function error(e) {
        debug Error: e.toString();
        var (i, p) = DB.data.p.find(p => p.audio == podcast.audio);
        if (!p.list) DB.data.p.remove(i);
        DB.save();
    }
    try {
        if (Linux.is)
        {
            var p = System.Process.exec("curl", ["-w","\"%{http_code}\"","-L", "-o", path, podcast.audio]);
                p.on("stdout", (data) => {
                    if (data == "\"200\"") {
                        p.terminate();
                        success(1);
                    }
                });
                p.on("stderr", (data) => {
                    el.text = data[..4] + "%";
                });
        }
        else
        {
            var query = {
                type  : #get,
                url   : podcast.audio,
                toFile: path,
                success : success,
                progress: progress,
                error   : error
            };
            if (DB.data.o.path) {
                var p = DB.data.o.path.split(":");
                query.proxyHost = p[0];
                query.proxyPort = p[1].toInteger();
            }
            await view.request(query);
        }
    } catch(err) { debug: err.toString(); }
}

