
event click $(.bDownload) {
    var episode = this.$o(episode);
    var podcast = {
        name  : episode.$(name).text,
        author: $(author>name).text,
        audio : episode.@#audio,
        list  : "",
        down  : true,
        time  : 0
    };
    DB.addPodcast(podcast, false);
    DB.downloads();
    download(podcast);
}

function download(podcast) {
    var el = $(#downloads item[audio='{podcast.audio}'] .bPlay);
    el.@#download = true;
    var path = URL.fromPath(DB.data.o.downloadDir + "/" + podcast.name + "." + URL.parse(podcast.audio).ext);
    function progress(loaded, total) {
        el.text = String.printf("%02d%%",((loaded || 0)/(total || 0).toFloat())*100);
    }
    function success(md5) {
        if (md5) {
            el.@#download = undefined;
            el.text = "PLAY";
            el.$o(item).@#audio = path;
            var (i, p) = DB.data.p.find(p => p.audio == podcast.audio);
            DB.data.p[i].audio = path;
            DB.save();
        } else { el.text = "ERROR"; debug DOWNLOAD: "Error"; }
    }
    function error(e) {
        debug Error: e.toString();
        var (i, p) = DB.data.p.find(p => p.audio == podcast.audio);
        if (!p.list) DB.data.p.remove(i);
        DB.save();
    }
    try {

        var query = {
            type  : #get,
            url   : podcast.audio,
            toFile: path,
            success : success,
            progress: progress,
            error   : error
        };
        if (DB.data.o.path) {
            var p = DB.data.o.path.split(":");
            query.proxyHost = p[0];
            query.proxyPort = p[1].toInteger();
        }
        view.request(query);

    } catch(err) { debug: err.toString(); }
}

