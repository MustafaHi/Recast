
var Items = []; // used by virtual-list.tis

function Get(params) {
    var defaultParams = { type:#get, output:#stream };
    var query = {...defaultParams, ...params};
    if (DB.data.o.proxy) {
        var p = DB.data.o.proxy.split(":");
        query.proxyHost = p[0];
        query.proxyPort = p[1].toInteger();
    }
    return view.request(query);
}

async function getPodcast(link) {
    try {
        var r = await Get({url: link});
        Feed.html = r[0].toString().replace("<![CDATA[", "").replace("]]>", "");
        // Items = Feed.$$(channel>item);
        Items = [];
        for (var it in Feed.$$(channel>item)) {
            if (it.$(enclosure)) Items.push(it);
        }
        $(episodes).vlist.navigate("start");

        // update author 
        var author = $(author);
        var podcast = Podcasts.find(p => p.feedUrl == link);
        if (!podcast) { podcast = DB.data.s.find(p => p.feed == link); }
        author.$(>img).@#src = podcast.artworkUrl600 || podcast.image600;
        author.$(>name).html = podcast.collectionName || podcast.author;
        author.$(>description).html = Feed.$(channel>description).text;

        $(.bSubscribe).state.current = DB.data.s.some(p => p.feed == link);
        Playlist.state.busy = false;
        r[0].close();
    } catch (e) {
        Playlist.@#failed = true;
        debug error: e.toString();
    }
}

async function getPodcasts(searchTerm, id, limit = 11) {
    var link = "http://itunes.apple.com/search";
    var header = { 
        "Accept": "application/json",
        "Content-Type": "application/json"
    }
    var param = {
        "term" : searchTerm,
        "media": "podcast",
        "limit": limit
    }
    try {
        var r = await Get({url: link, params: param, headers: header});
        r = (parseData(r[0])).results;
        Podcasts = [...Podcasts,...r];
        var h = !id ? $(#home) : $(#{id} .content);
        h.clear();
        var image = Performance ? "artworkUrl100" : "artworkUrl600";
        for (var p in r)
            if (p.feedUrl)
                h.$append(<podcast feed="{p.feedUrl}"><img src="{p[image]}"/><n>{p.collectionName}</n><a>{p.artistName}</a></podcast>);
    } catch (e) {
        debug error: e.toString();
    }
}

